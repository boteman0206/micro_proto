// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pc/product.proto

package pc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetProductDto struct {
	// 商品id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	//商品名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	//排序值
	Sort                 string   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProductDto) Reset()         { *m = GetProductDto{} }
func (m *GetProductDto) String() string { return proto.CompactTextString(m) }
func (*GetProductDto) ProtoMessage()    {}
func (*GetProductDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8f671ce25f94185, []int{0}
}

func (m *GetProductDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProductDto.Unmarshal(m, b)
}
func (m *GetProductDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProductDto.Marshal(b, m, deterministic)
}
func (m *GetProductDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProductDto.Merge(m, src)
}
func (m *GetProductDto) XXX_Size() int {
	return xxx_messageInfo_GetProductDto.Size(m)
}
func (m *GetProductDto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProductDto.DiscardUnknown(m)
}

var xxx_messageInfo_GetProductDto proto.InternalMessageInfo

func (m *GetProductDto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetProductDto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetProductDto) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

// 返回
type BaseResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error"`
	Data                 string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseResponse) Reset()         { *m = BaseResponse{} }
func (m *BaseResponse) String() string { return proto.CompactTextString(m) }
func (*BaseResponse) ProtoMessage()    {}
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8f671ce25f94185, []int{1}
}

func (m *BaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseResponse.Unmarshal(m, b)
}
func (m *BaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseResponse.Marshal(b, m, deterministic)
}
func (m *BaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseResponse.Merge(m, src)
}
func (m *BaseResponse) XXX_Size() int {
	return xxx_messageInfo_BaseResponse.Size(m)
}
func (m *BaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BaseResponse proto.InternalMessageInfo

func (m *BaseResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BaseResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *BaseResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BaseResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*GetProductDto)(nil), "pc.GetProductDto")
	proto.RegisterType((*BaseResponse)(nil), "pc.BaseResponse")
}

func init() { proto.RegisterFile("pc/product.proto", fileDescriptor_a8f671ce25f94185) }

var fileDescriptor_a8f671ce25f94185 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xbd, 0x6a, 0xc3, 0x30,
	0x14, 0x85, 0xb1, 0x6c, 0x17, 0x7c, 0x69, 0x8b, 0x7b, 0xe9, 0x20, 0x3a, 0x19, 0x4f, 0x9e, 0x5c,
	0xda, 0xee, 0x1d, 0x82, 0xc1, 0x6b, 0xf0, 0x03, 0x04, 0x14, 0x49, 0x04, 0x0f, 0xf6, 0x15, 0x92,
	0xf2, 0xfe, 0x41, 0x3f, 0x90, 0x64, 0xfb, 0x74, 0xd0, 0xfd, 0x38, 0x07, 0x5a, 0x23, 0xbf, 0x8d,
	0x25, 0x75, 0x95, 0x7e, 0x34, 0x96, 0x3c, 0x21, 0x33, 0xb2, 0x9f, 0xe1, 0x6d, 0xd6, 0xfe, 0x98,
	0xf2, 0xc9, 0x13, 0xbe, 0x03, 0x5b, 0x15, 0x2f, 0xba, 0x62, 0xa8, 0x17, 0xb6, 0x2a, 0x44, 0xa8,
	0x76, 0xb1, 0x69, 0xce, 0xba, 0x62, 0x68, 0x96, 0xc8, 0x21, 0x73, 0x64, 0x3d, 0x2f, 0x53, 0x16,
	0xb8, 0x3f, 0xc1, 0xeb, 0x41, 0x38, 0xbd, 0x68, 0x67, 0x68, 0x77, 0xf1, 0x8f, 0x24, 0xa5, 0xb3,
	0x29, 0x32, 0xb6, 0x50, 0x6e, 0xee, 0x92, 0x55, 0x01, 0xf1, 0x13, 0x6a, 0x6d, 0x2d, 0xd9, 0xac,
	0x4a, 0x8f, 0x70, 0xab, 0x84, 0x17, 0xbc, 0x4a, 0xfe, 0xc0, 0xbf, 0xff, 0xd0, 0x4c, 0x32, 0xf7,
	0xc4, 0x1f, 0x80, 0x7b, 0x6b, 0xfc, 0x18, 0x8d, 0x1c, 0x9f, 0x56, 0x7c, 0xb5, 0x21, 0x7a, 0xec,
	0x73, 0x7e, 0x89, 0x9b, 0xff, 0x6e, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xd5, 0x7c, 0xc2, 0x07,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DcProductClient is the client API for DcProduct service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DcProductClient interface {
	//新增、编辑品牌
	GetProduct(ctx context.Context, in *GetProductDto, opts ...grpc.CallOption) (*BaseResponse, error)
}

type dcProductClient struct {
	cc *grpc.ClientConn
}

func NewDcProductClient(cc *grpc.ClientConn) DcProductClient {
	return &dcProductClient{cc}
}

func (c *dcProductClient) GetProduct(ctx context.Context, in *GetProductDto, opts ...grpc.CallOption) (*BaseResponse, error) {
	out := new(BaseResponse)
	err := c.cc.Invoke(ctx, "/pc.DcProduct/GetProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DcProductServer is the server API for DcProduct service.
type DcProductServer interface {
	//新增、编辑品牌
	GetProduct(context.Context, *GetProductDto) (*BaseResponse, error)
}

// UnimplementedDcProductServer can be embedded to have forward compatible implementations.
type UnimplementedDcProductServer struct {
}

func (*UnimplementedDcProductServer) GetProduct(ctx context.Context, req *GetProductDto) (*BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
}

func RegisterDcProductServer(s *grpc.Server, srv DcProductServer) {
	s.RegisterService(&_DcProduct_serviceDesc, srv)
}

func _DcProduct_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductDto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DcProductServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pc.DcProduct/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DcProductServer).GetProduct(ctx, req.(*GetProductDto))
	}
	return interceptor(ctx, in, info, handler)
}

var _DcProduct_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pc.DcProduct",
	HandlerType: (*DcProductServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProduct",
			Handler:    _DcProduct_GetProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pc/product.proto",
}
