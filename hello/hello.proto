syntax = "proto3";

package hello;





//=====================测试proto=====================
service HelloService {

  // 简单rpc使用
  rpc Hello (StringDto) returns (StringDto);

  //  .. grpc的流使用 关键字 stream 指定启用流特性，参数部分是接收客户端参数的流，返回值是返回给客户端的流。
  rpc Channel (stream StringDto) returns (stream StringDto);

  // 单向流使用
  rpc ChannelOneWay (stream StringDto) returns (StringDto);



}


message StringDto{
  string value = 1;
}



//=====================发布订阅模式=============================

//    现在尝试基于 gRPC 和 pubsub 包，提供一个跨网络的发布和订阅系统。首先通过 Protobuf 定义一个发布订阅服务接口：
service PubsubService {
//    其中 Publish 是普通的 RPC 方法
  rpc Publish (StringDto) returns (StringDto);
//    Subscribe 则是一个单向的流服务。然后 gRPC 插件会为服务端和客户端生成对应的接口：
  rpc Subscribe (StringDto) returns (stream StringDto);
}



//================================token===============================

service AuthService {
  // 使用token验证
  rpc Hello (StringDto) returns (StringDto);

}